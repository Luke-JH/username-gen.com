# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: build

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

jobs:
    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [20.4.0]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"

            - run: npm ci
            # The generate command also creates a CNAME file as defined in package.json
            - run: npm run generate --if-present

            - run: ls
            - run: mv ./.output/public /tmp/dist
            - run: ls /tmp/dist
            - run: git config user.name "${GITHUB_ACTOR}"
            - run: git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
            - run: git switch -c gh-pages
            # removes node_modules
            - run: rm -rf node_modules
            - run: ls
            # deletes everything else
            - run: git rm -rf .
            - run: cp -R /tmp/dist/* ./
            - run: ls
            - run: rm -rf ./.output && rm -rf dist && rm -rf ./.nuxt
            - run: ls
            - run: git status
            - run: git add .
            - run: git status
            - run: git commit -m "Update gh-pages with dist folder"
            - run: git push -f origin gh-pages
            - run: git checkout main
            - run: rm -rf /tmp/dist
